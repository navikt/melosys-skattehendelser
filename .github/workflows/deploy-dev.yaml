name: deploy-dev
on:
  push:
    paths-ignore:
      - "**.md"
      - ".gitignore"
      - "LICENCE"
      - "CODEOWNERS"
    branches:
      - master
permissions:
  contents: write
  packages: write
env:
  image: ghcr.io/${{ github.repository }}/melosys-skattehendelser:${{ github.sha }}
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      PASSWORD: ${{ secrets.READER_TOKEN }}
      REGISTRY: ghcr.io

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: deploy new Unleash Apikey to ${{github.event.inputs.environment}}
        uses: nais/deploy/actions/deploy@v2
        env:
          CLUSTER: dev-gcp
          RESOURCE: nais/unleash-apitoken.yml
          VARS: nais/vars-q2.json
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Setup gradle dependency cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/.*gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.READER_TOKEN }}
      - name: Run tests
        run: ./gradlew test
      - name: Build
        run: ./gradlew clean build -x test
      - name: Build and publish Docker image
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          docker build --tag ${image} .
          docker login ghcr.io -u ${GITHUB_REPOSITORY} -p ${GITHUB_TOKEN}
          docker push ${image}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: pre-deploy
        uses: navikt/digihot-deploy/actions/pre-deploy@v3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Deploy til dev (Q2)
        uses: nais/deploy/actions/deploy@v2
        env:
          CLUSTER: dev-gcp
          RESOURCE: nais/nais.yml
          VAR: image=${{env.image}}
          VARS: nais/vars-q2.json
#      - name: Deploy til dev (Q1)
#        uses: nais/deploy/actions/deploy@v2
#        env:
#          CLUSTER: dev-gcp
#          RESOURCE: nais/nais.yml
#          VAR: image=${{env.image}}
#          VARS: nais/vars-q1.json
      - name: Get commit message
        run: echo "COMMIT_MSG=$(git log --format=%s -n 1)" >> $GITHUB_ENV
      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_COLOR: "${{ job.status == 'success' && 'good' || 'danger' }}"
          SLACK_USERNAME: Github Actions
          SLACK_ICON: https://github.com/github.png?size=48
          SLACK_TITLE: "melosys-skattehendelser ${{ job.status == 'success' && 'ble deployet' || 'kunne ikke deployes' }} til dev-gcp (Q1, Q2)"
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_MESSAGE: ${{ env.COMMIT_MSG }}
      - name: post-deploy
        uses: navikt/digihot-deploy/actions/post-deploy@v3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: draft release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.VERSION_TAG }}
          name: ${{ env.APPLICATION }} ${{ env.VERSION_TAG }}
          body: ${{ env.CHANGE_LOG }}
          draft: true
          prerelease: false
