name: deploy-prod
on:
  release:
    types: [published]
permissions:
  contents: write
  packages: write
jobs:
  deploy-prod:
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      PASSWORD: ${{ secrets.READER_TOKEN }}
      REGISTRY: ghcr.io
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: deploy new Unleash Apikey to ${{github.event.inputs.environment}}
        uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: prod-gcp
          RESOURCE: nais/unleash-apitoken.yml
          VARS: nais/vars-prod.json
      - name: get release tag
        run: |
          APPLICATION=$(echo $GITHUB_REPOSITORY | cut -d "/" -f 2)
          IMAGE=ghcr.io/$GITHUB_REPOSITORY/$APPLICATION:$GITHUB_SHA
          echo "IMAGE=${IMAGE}" >> $GITHUB_ENV
          echo $IMAGE
      - name: Deploy
        uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: prod-gcp
          RESOURCE: nais/nais.yml
          VARS: nais/vars-prod.json
      - name: post-production
        uses: navikt/digihot-deploy/actions/post-production@v3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.READER_TOKEN }}
      - name: tag-image-with-latest
        run: |
          docker login ghcr.io -u ${GITHUB_REPOSITORY} -p ${GITHUB_TOKEN}
          APPLICATION=$(echo $GITHUB_REPOSITORY | cut -d "/" -f 2)
          IMAGE=ghcr.io/$GITHUB_REPOSITORY/$APPLICATION:$GITHUB_SHA
          docker pull $IMAGE
          docker tag $IMAGE ghcr.io/$GITHUB_REPOSITORY/$APPLICATION:latest
          docker push ghcr.io/$GITHUB_REPOSITORY/$APPLICATION:latest
      - name: Get commit message
        run: echo "COMMIT_MSG=$(git log --format=%s -n 1)" >> $GITHUB_ENV
      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_COLOR: "${{ job.status == 'success' && 'good' || 'danger' }}"
          SLACK_USERNAME: Github Actions
          SLACK_ICON: https://github.com/github.png?size=48
          SLACK_TITLE: "melosys-skattehendelser ${{ job.status == 'success' && 'ble deployet' || 'kunne ikke deployes' }} til prod-gcp"
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_MESSAGE: ${{ env.COMMIT_MSG }}
