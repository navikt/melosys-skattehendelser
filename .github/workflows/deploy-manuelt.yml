name: Deploy manuelt
on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'MiljÃ¸ (q1, q2 eller prod)'
        required: true
        default: 'q2'

permissions:
  contents: write
  packages: write
  id-token: write

env:
  IMAGE: europe-north1-docker.pkg.dev/nais-management-233d/teammelosys/melosys-skattehendelser:${{ github.sha }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  check_docker_image_exists:
    name: Sjekk hvis Docker-image eksisterer i registry
    runs-on: ubuntu-latest-8-cores
    steps:
      - name: Login to NAIS registry
        uses: nais/login@v0
        with:
          team: teammelosys
      - name: Check if image exists
        id: check_image
        run: |
          if docker pull ${{ env.IMAGE }} >/dev/null 2>&1; then
            echo "Image eksisterer i registry"
            echo "image_exists=true" >> $GITHUB_OUTPUT
          else
            echo "Image eksisterer ikke i registry"
            echo "image_exists=false" >> $GITHUB_OUTPUT
          fi
    outputs:
      exists: ${{ steps.check_image.outputs.image_exists }}

  build:
    name: Build og push Docker image
    runs-on: ubuntu-latest-8-cores
    needs: check_docker_image_exists
    if: needs.check_docker_image_exists.outputs.exists != 'true'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Setup gradle dependency cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/.*gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Run tests
        run: ./gradlew test
      - name: Build
        run: ./gradlew clean build -x test
      - name: Build and publish Docker image
        uses: nais/docker-build-push@v0
        with:
          team: teammelosys
          tag: ${{ github.sha }}

  deploy:
    runs-on: ubuntu-latest-8-cores
    needs: [build, check_docker_image_exists]
    if: always() && (needs.build.result == 'success' || needs.build.result == 'skipped')
    steps:
      - name: Deploy to dev-gcp
        if: github.event.inputs.environment != 'prod'
        run: |
          echo "CLUSTER=dev-gcp" >> $GITHUB_ENV
      - name: Deploy to prod-gcp
        if: github.event.inputs.environment == 'prod'
        run: |
          echo "CLUSTER=prod-gcp" >> $GITHUB_ENV
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: nais/deploy/actions/deploy@v2
        env:
          CLUSTER: ${{ env.CLUSTER }}
          RESOURCE: nais/nais.yml
          IMAGE: ${{ env.IMAGE }}
          VARS: nais/vars-${{github.event.inputs.environment}}.json
      - name: Get commit message
        run: echo "COMMIT_MSG=$(git log --format=%s -n 1)" >> $GITHUB_ENV
      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_COLOR: "${{ job.status == 'success' && 'good' || 'danger' }}"
          SLACK_USERNAME: Github Actions
          SLACK_ICON: https://github.com/github.png?size=48
          SLACK_TITLE: "melosys-skattehendelser ${{ job.status == 'success' && 'ble deployet' || 'kunne ikke deployes' }} til ${{ github.event.inputs.environment }}"
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_MESSAGE: ${{ env.COMMIT_MSG }}
